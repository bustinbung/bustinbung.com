---
import { Debug } from "astro/components";
import type { MarkdownInstance } from "astro";

interface Props {
	posts: MarkdownInstance<Record<string, any>>[]
}

import BaseLayout from "@layouts/BaseLayout.astro";
import DateDisplay from "@components/DateDisplay.astro";
import TagList from "@components/TagList.astro";

export async function getStaticPaths() {
	const allPosts = await Astro.glob("../../content/**/*.md");
	
	const uniqueTags = [
	...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
	];
	
	return uniqueTags.map((tag) => {
		const filteredPosts = allPosts.filter((post) =>
			post.frontmatter.tags.includes(tag)
		);

		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={`/${tag}`} isPost={true}>
	<h2>{tag}</h2>

	<Debug {posts}/>
	
	<ul>
		{posts.map(post => 
			<li>
				<DateDisplay date={new Date(post.frontmatter.date)}/>&#32;
				<a href={post.url}>{post.frontmatter.title}</a>
				<TagList tags={post.frontmatter.tags}/>
				{post.frontmatter.description != undefined && <ul><li>{post.frontmatter.description}</li></ul>}
			</li>
		)}
	</ul>
</BaseLayout>